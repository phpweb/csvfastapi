# Generated by Selenium IDE
import pytest
import time
import json
import os
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

driver_path = os.environ.get('CHROME_DRIVER_PATH', None)
tv_username = os.environ.get('TV_USERNAME', None)
tv_password = os.environ.get('TV_PASSWORD', None)
url = "https://www.tradingview.com/crypto-screener/#signin"
# tv_trend_csv_download_path = os.environ.get('TV_TREND_CSV_DOWNLOAD_PATH', None)
tv_trend_csv_download_path = os.path.abspath(os.path.dirname(__file__)) + "/data/"


class TestDownloadcsv():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_downloadcsv(self):
        chrome_options = webdriver.ChromeOptions()

        preferences = {"download.prompt_for_download": False,
                       "download.default_directory": tv_trend_csv_download_path,
                       "download.directory_upgrade": True,
                       "profile.default_content_settings.popups": 0,
                       "profile.default_content_setting_values.notifications": 2,
                       "profile.default_content_setting_values.automatic_downloads": 1
                       }
        chrome_options.add_experimental_option("prefs", preferences)
        driver = webdriver.Chrome(executable_path=driver_path, chrome_options=chrome_options)
        driver.get(url)
        driver.set_window_size(1920, 1057)
        driver.find_element_by_class_name("tv-signin-dialog").click()
        driver.find_element_by_class_name("js-show-email").click()
        driver.find_element_by_name('username').send_keys(tv_username)
        driver.find_element_by_name('password').send_keys(tv_password)
        driver.find_element_by_class_name('tv-button__loader').click()

        # Test name: Download csv
        # Step # | name | target | value
        # 1 | open | /crypto-screener/ |
        self.driver.get("https://www.tradingview.com/crypto-screener/")
        # 2 | mouseOver | linkText=TradingView |
        element = self.driver.find_element(By.LINK_TEXT, "TradingView")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        # 3 | click | css=.js-filter-sets |
        self.driver.find_element(By.CSS_SELECTOR, ".js-filter-sets").click()
        # 4 | click | xpath=//div[@data-name='screener-filter-sets'] |
        self.driver.find_element(By.XPATH, "//div[@data-name=\'screener-filter-sets\']").click()
        # 5 | click | xpath=//span[text()='Binance'] |
        self.driver.find_element(By.XPATH, "//span[text()=\'Binance\']").click()
        # 6 | click | css=.tv-screener-toolbar__button--filters |
        self.driver.find_element(By.CSS_SELECTOR, ".tv-screener-toolbar__button--filters").click()
        # 7 | type | css=.tv-screener-search__input | change
        self.driver.find_element(By.CSS_SELECTOR, ".tv-screener-search__input").send_keys("change")
        # 8 | click | css=.js-filter-field-change .tv-screener-dialog__selectbox-caption |
        self.driver.find_element(By.CSS_SELECTOR,
                                 ".js-filter-field-change .tv-screener-dialog__selectbox-caption").click()
        # 9 | click | css=.tv-control-select__option:nth-child(3) > .tv-control-select__option-wrap |
        self.driver.find_element(By.CSS_SELECTOR,
                                 ".tv-control-select__option:nth-child(3) > .tv-control-select__option-wrap").click()
        # 10 | type | css=.js-filter-field-change .tv-screener-dialog__filter-field-text | 10
        self.driver.find_element(By.CSS_SELECTOR,
                                 ".js-filter-field-change .tv-screener-dialog__filter-field-text").send_keys("10")
        # 11 | click | css=.js-filter-field-change15 > .tv-screener-dialog__filter-field-content |
        self.driver.find_element(By.CSS_SELECTOR,
                                 ".js-filter-field-change15 > .tv-screener-dialog__filter-field-content").click()
        # 12 | click | css=.tv-dialog__close > svg |
        self.driver.find_element(By.CSS_SELECTOR, ".tv-dialog__close > svg").click()
        # 13 | click | css=.tv-screener-toolbar__button-icon--export |
        self.driver.find_element(By.CSS_SELECTOR, ".tv-screener-toolbar__button-icon--export").click()

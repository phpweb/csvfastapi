//@version=5
indicator("SSL Hybrid Part_9", overlay=true)

//ATR
atrlen = input(14, 'ATR Period')
mult = input.float(1, 'ATR Multi', step=0.1)
smoothing = input.string(title='ATR Smoothing', defval='WMA', options=['RMA', 'SMA', 'EMA', 'WMA'])

// Get only symbol
only_symbol(s) =>
    array.get(str.split(s, ":"), 1)

ma_function(source, atrlen) =>
    if smoothing == 'RMA'
        ta.rma(source, atrlen)
    else
        if smoothing == 'SMA'
            ta.sma(source, atrlen)
        else
            if smoothing == 'EMA'
                ta.ema(source, atrlen)
            else
                ta.wma(source, atrlen)
atr_slen = ma_function(ta.tr(true), atrlen)


SSL2Type = 'JMA'
len2 = 5
//
SSL3Type = 'HMA'
len3 = 15
src = close

////BASELINE / SSL1 / SSL2 / EXIT MOVING AVERAGE VALUES
maType = 'HMA'
len = 60


ma(type, src, len) =>
    float result = 0
    if type == 'HMA'  // Hull
        result := ta.wma(2 * ta.wma(src, len / 2) - ta.wma(src, len), math.round(math.sqrt(len)))
        result
    result


screener_func() =>
    ///SSL 1 and SSL2
    emaHigh = ma(maType, high, len)
    emaLow = ma(maType, low, len)

    maHigh = ma(SSL2Type, high, len2)
    maLow = ma(SSL2Type, low, len2)

    //SSL2 VALUES
    Hlv2 = int(na)
    Hlv2 := close > maHigh ? 1 : close < maLow ? -1 : Hlv2[1]
    sslDown2 = Hlv2 < 0 ? maHigh : maLow

    ///EXIT
    ExitHigh = ma(SSL3Type, high, len3)
    ExitLow = ma(SSL3Type, low, len3)

    BBMC = ma(maType, close, len)

    ///Keltner Baseline Channel
    useTrueRange = input.bool(true)
    multy = input.float(0.2, step=0.05, title='Base Channel Multiplier')
    Keltma = ma(maType, src, len)
    range_1 = useTrueRange ? ta.tr : high - low
    rangema = ta.ema(range_1, len)
    upperk = Keltma + rangema * multy
    lowerk = Keltma - rangema * multy

    //EXIT VALUES
    Hlv3 = int(na)
    Hlv3 := close > ExitHigh ? 1 : close < ExitLow ? -1 : Hlv3[1]
    sslExit = Hlv3 < 0 ? ExitHigh : ExitLow
    base_cross_Long = ta.crossover(close, sslExit)
    base_cross_Short = ta.crossover(sslExit, close)
    codiff = base_cross_Long ? 1 : base_cross_Short ? -1 : na


    atr_crit = input.float(0.9, step=0.1, title='Continuation ATR Criteria')
    upper_half = atr_slen * atr_crit + close
    lower_half = close - atr_slen * atr_crit
    buy_inatr = lower_half < sslDown2
    buy_cont = close > BBMC and close > sslDown2
    buyContinuation = buy_inatr and buy_cont
    sslExitSell = ta.crossover(close, sslExit)
    sslExitBuy = ta.crossover(sslExit, close)
    baseLineBuyAlertCond = ta.crossover(close, upperk)
    baseLineSellAlertCond = ta.crossover(lowerk, close)

    [math.round_to_mintick(close), buyContinuation, baseLineBuyAlertCond, baseLineSellAlertCond, codiff, sslExitSell, sslExitBuy]/////////////
// SYMBOLS //
// Part 9

u01 = input.bool(true,  title = "", group = 'Symbols', inline = 's01')
u02 = input.bool(true,  title = "", group = 'Symbols', inline = 's02')
u03 = input.bool(true,  title = "", group = 'Symbols', inline = 's03')
u04 = input.bool(true,  title = "", group = 'Symbols', inline = 's04')
u05 = input.bool(true,  title = "", group = 'Symbols', inline = 's05')
u06 = input.bool(true,  title = "", group = 'Symbols', inline = 's06')
u07 = input.bool(true,  title = "", group = 'Symbols', inline = 's07')
u08 = input.bool(true,  title = "", group = 'Symbols', inline = 's08')
u09 = input.bool(true,  title = "", group = 'Symbols', inline = 's09')
u10 = input.bool(true,  title = "", group = 'Symbols', inline = 's10')
u11 = input.bool(true,  title = "", group = 'Symbols', inline = 's11')
u12 = input.bool(true,  title = "", group = 'Symbols', inline = 's12')
u13 = input.bool(true,  title = "", group = 'Symbols', inline = 's13')
u14 = input.bool(true,  title = "", group = 'Symbols', inline = 's14')
u15 = input.bool(true,  title = "", group = 'Symbols', inline = 's15')
// SYMBOLS //
// Part 9

s01 = input.symbol('NEXOUSDT', group = 'Symbols', inline = 's01')
s02 = input.symbol('REIUSDT', group = 'Symbols', inline = 's02')
s03 = input.symbol('GALUSDT', group = 'Symbols', inline = 's03')
s04 = input.symbol('LDOUSDT', group = 'Symbols', inline = 's04')
s05 = input.symbol('EPXUSDT', group = 'Symbols', inline = 's05')
s06 = input.symbol('OPUSDT', group = 'Symbols', inline = 's06')
s07 = input.symbol('LEVERUSDT', group = 'Symbols', inline = 's07')
s08 = input.symbol('IQBUSD', group = 'Symbols', inline = 's08')
s09 = input.symbol('CREAMBUSD', group = 'Symbols', inline = 's09')
s10 = input.symbol('AERGOBUSD', group = 'Symbols', inline = 's10')
s11 = input.symbol('PROMBUSD', group = 'Symbols', inline = 's11')
s12 = input.symbol('UFTBUSD', group = 'Symbols', inline = 's12')
s13 = input.symbol('LUNCBUSD', group = 'Symbols', inline = 's13')
s14 = input.symbol('USTCBUSD', group = 'Symbols', inline = 's14')
s15 = input.symbol('WBTCBUSD', group = 'Symbols', inline = 's15')
// Security calls 
//Part 9

[current_price01, buyContinuation01, baseLineBuyAlertCond01, baseLineSellAlertCond01, codiff_plot01, sslExitSell01, sslExitBuy01] = request.security(s01, timeframe.period, screener_func())
[current_price02, buyContinuation02, baseLineBuyAlertCond02, baseLineSellAlertCond02, codiff_plot02, sslExitSell02, sslExitBuy02] = request.security(s02, timeframe.period, screener_func())
[current_price03, buyContinuation03, baseLineBuyAlertCond03, baseLineSellAlertCond03, codiff_plot03, sslExitSell03, sslExitBuy03] = request.security(s03, timeframe.period, screener_func())
[current_price04, buyContinuation04, baseLineBuyAlertCond04, baseLineSellAlertCond04, codiff_plot04, sslExitSell04, sslExitBuy04] = request.security(s04, timeframe.period, screener_func())
[current_price05, buyContinuation05, baseLineBuyAlertCond05, baseLineSellAlertCond05, codiff_plot05, sslExitSell05, sslExitBuy05] = request.security(s05, timeframe.period, screener_func())
[current_price06, buyContinuation06, baseLineBuyAlertCond06, baseLineSellAlertCond06, codiff_plot06, sslExitSell06, sslExitBuy06] = request.security(s06, timeframe.period, screener_func())
[current_price07, buyContinuation07, baseLineBuyAlertCond07, baseLineSellAlertCond07, codiff_plot07, sslExitSell07, sslExitBuy07] = request.security(s07, timeframe.period, screener_func())
[current_price08, buyContinuation08, baseLineBuyAlertCond08, baseLineSellAlertCond08, codiff_plot08, sslExitSell08, sslExitBuy08] = request.security(s08, timeframe.period, screener_func())
[current_price09, buyContinuation09, baseLineBuyAlertCond09, baseLineSellAlertCond09, codiff_plot09, sslExitSell09, sslExitBuy09] = request.security(s09, timeframe.period, screener_func())
[current_price10, buyContinuation10, baseLineBuyAlertCond10, baseLineSellAlertCond10, codiff_plot10, sslExitSell10, sslExitBuy10] = request.security(s10, timeframe.period, screener_func())
[current_price11, buyContinuation11, baseLineBuyAlertCond11, baseLineSellAlertCond11, codiff_plot11, sslExitSell11, sslExitBuy11] = request.security(s11, timeframe.period, screener_func())
[current_price12, buyContinuation12, baseLineBuyAlertCond12, baseLineSellAlertCond12, codiff_plot12, sslExitSell12, sslExitBuy12] = request.security(s12, timeframe.period, screener_func())
[current_price13, buyContinuation13, baseLineBuyAlertCond13, baseLineSellAlertCond13, codiff_plot13, sslExitSell13, sslExitBuy13] = request.security(s13, timeframe.period, screener_func())
[current_price14, buyContinuation14, baseLineBuyAlertCond14, baseLineSellAlertCond14, codiff_plot14, sslExitSell14, sslExitBuy14] = request.security(s14, timeframe.period, screener_func())
[current_price15, buyContinuation15, baseLineBuyAlertCond15, baseLineSellAlertCond15, codiff_plot15, sslExitSell15, sslExitBuy15] = request.security(s15, timeframe.period, screener_func())

/////////////
// ARRAYS //

s_arr   = array.new_string(0)
u_arr   = array.new_bool(0)
current_price_arr   = array.new_float(0)
buy_continuation_arr   = array.new_bool(0)
baseLineBuyAlertCond_arr   = array.new_bool(0)
baseLineSellAlertCond_arr   = array.new_bool(0)
codiff_plot_arr   = array.new_bool(0)
sslExitSell_arr   = array.new_bool(0)
sslExitBuy_arr   = array.new_bool(0)
// Add Symbols 
array.push(s_arr, only_symbol(s01))
array.push(s_arr, only_symbol(s02))
array.push(s_arr, only_symbol(s03))
array.push(s_arr, only_symbol(s04))
array.push(s_arr, only_symbol(s05))
array.push(s_arr, only_symbol(s06))
array.push(s_arr, only_symbol(s07))
array.push(s_arr, only_symbol(s08))
array.push(s_arr, only_symbol(s09))
array.push(s_arr, only_symbol(s10))
array.push(s_arr, only_symbol(s11))
array.push(s_arr, only_symbol(s12))
array.push(s_arr, only_symbol(s13))
array.push(s_arr, only_symbol(s14))
array.push(s_arr, only_symbol(s15))
// FLAGS 
array.push(u_arr, u01)
array.push(u_arr, u02)
array.push(u_arr, u03)
array.push(u_arr, u04)
array.push(u_arr, u05)
array.push(u_arr, u06)
array.push(u_arr, u07)
array.push(u_arr, u08)
array.push(u_arr, u09)
array.push(u_arr, u10)
array.push(u_arr, u11)
array.push(u_arr, u12)
array.push(u_arr, u13)
array.push(u_arr, u14)
array.push(u_arr, u15)
// Current price 
array.push(current_price_arr, current_price01)
array.push(current_price_arr, current_price02)
array.push(current_price_arr, current_price03)
array.push(current_price_arr, current_price04)
array.push(current_price_arr, current_price05)
array.push(current_price_arr, current_price06)
array.push(current_price_arr, current_price07)
array.push(current_price_arr, current_price08)
array.push(current_price_arr, current_price09)
array.push(current_price_arr, current_price10)
array.push(current_price_arr, current_price11)
array.push(current_price_arr, current_price12)
array.push(current_price_arr, current_price13)
array.push(current_price_arr, current_price14)
array.push(current_price_arr, current_price15)
// Buy continuation 
array.push(buy_continuation_arr, buyContinuation01)
array.push(buy_continuation_arr, buyContinuation02)
array.push(buy_continuation_arr, buyContinuation03)
array.push(buy_continuation_arr, buyContinuation04)
array.push(buy_continuation_arr, buyContinuation05)
array.push(buy_continuation_arr, buyContinuation06)
array.push(buy_continuation_arr, buyContinuation07)
array.push(buy_continuation_arr, buyContinuation08)
array.push(buy_continuation_arr, buyContinuation09)
array.push(buy_continuation_arr, buyContinuation10)
array.push(buy_continuation_arr, buyContinuation11)
array.push(buy_continuation_arr, buyContinuation12)
array.push(buy_continuation_arr, buyContinuation13)
array.push(buy_continuation_arr, buyContinuation14)
array.push(buy_continuation_arr, buyContinuation15)
// Baseline BUY alert condition 
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond01)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond02)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond03)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond04)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond05)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond06)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond07)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond08)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond09)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond10)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond11)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond12)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond13)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond14)
array.push(baseLineBuyAlertCond_arr, baseLineBuyAlertCond15)
// Baseline SELL alert condition 
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond01)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond02)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond03)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond04)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond05)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond06)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond07)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond08)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond09)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond10)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond11)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond12)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond13)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond14)
array.push(baseLineSellAlertCond_arr, baseLineSellAlertCond15)
// Condition for plotting 
array.push(codiff_plot_arr, codiff_plot01)
array.push(codiff_plot_arr, codiff_plot02)
array.push(codiff_plot_arr, codiff_plot03)
array.push(codiff_plot_arr, codiff_plot04)
array.push(codiff_plot_arr, codiff_plot05)
array.push(codiff_plot_arr, codiff_plot06)
array.push(codiff_plot_arr, codiff_plot07)
array.push(codiff_plot_arr, codiff_plot08)
array.push(codiff_plot_arr, codiff_plot09)
array.push(codiff_plot_arr, codiff_plot10)
array.push(codiff_plot_arr, codiff_plot11)
array.push(codiff_plot_arr, codiff_plot12)
array.push(codiff_plot_arr, codiff_plot13)
array.push(codiff_plot_arr, codiff_plot14)
array.push(codiff_plot_arr, codiff_plot15)
// SSL exit sell 
array.push(sslExitSell_arr, sslExitSell01)
array.push(sslExitSell_arr, sslExitSell02)
array.push(sslExitSell_arr, sslExitSell03)
array.push(sslExitSell_arr, sslExitSell04)
array.push(sslExitSell_arr, sslExitSell05)
array.push(sslExitSell_arr, sslExitSell06)
array.push(sslExitSell_arr, sslExitSell07)
array.push(sslExitSell_arr, sslExitSell08)
array.push(sslExitSell_arr, sslExitSell09)
array.push(sslExitSell_arr, sslExitSell10)
array.push(sslExitSell_arr, sslExitSell11)
array.push(sslExitSell_arr, sslExitSell12)
array.push(sslExitSell_arr, sslExitSell13)
array.push(sslExitSell_arr, sslExitSell14)
array.push(sslExitSell_arr, sslExitSell15)
// SSL exit buy 
array.push(sslExitBuy_arr, sslExitBuy01)
array.push(sslExitBuy_arr, sslExitBuy02)
array.push(sslExitBuy_arr, sslExitBuy03)
array.push(sslExitBuy_arr, sslExitBuy04)
array.push(sslExitBuy_arr, sslExitBuy05)
array.push(sslExitBuy_arr, sslExitBuy06)
array.push(sslExitBuy_arr, sslExitBuy07)
array.push(sslExitBuy_arr, sslExitBuy08)
array.push(sslExitBuy_arr, sslExitBuy09)
array.push(sslExitBuy_arr, sslExitBuy10)
array.push(sslExitBuy_arr, sslExitBuy11)
array.push(sslExitBuy_arr, sslExitBuy12)
array.push(sslExitBuy_arr, sslExitBuy13)
array.push(sslExitBuy_arr, sslExitBuy14)
array.push(sslExitBuy_arr, sslExitBuy15)
if barstate.islast
    for i = 0 to array.size(u_arr) - 1
        if array.get(u_arr, i)
            if array.get(buy_continuation_arr, i)
                alertstring = '{"symbol": "' + array.get(s_arr, i) + '", "tv_price": "' + str.tostring(array.get(current_price_arr, i)) + '","cond": "buyContinuation", "tf": "' + timeframe.period + '"}'
                alert(alertstring, alert.freq_once_per_bar)

            if array.get(baseLineBuyAlertCond_arr, i)
                alertstring = '{"symbol": "' + array.get(s_arr, i) + '", "tv_price": "' + str.tostring(array.get(current_price_arr, i)) + '","cond": "baseLineBuyAlert", "tf": "' + timeframe.period + '"}'
                alert(alertstring, alert.freq_once_per_bar)

            if array.get(baseLineSellAlertCond_arr, i)
                alertstring = '{"symbol": "' + array.get(s_arr, i) + '", "tv_price": "' + str.tostring(array.get(current_price_arr, i)) + '","cond": "baseLineSellAlert", "tf": "' + timeframe.period + '"}'
                alert(alertstring, alert.freq_once_per_bar)

            if array.get(sslExitSell_arr, i)
                alertstring = '{"symbol": "' + array.get(s_arr, i) + '", "tv_price": "' + str.tostring(array.get(current_price_arr, i)) + '","cond": "sslExitSell", "tf": "' + timeframe.period + '"}'
                alert(alertstring, alert.freq_once_per_bar)

            if array.get(sslExitBuy_arr, i)
                alertstring = '{"symbol": "' + array.get(s_arr, i) + '", "tv_price": "' + str.tostring(array.get(current_price_arr, i)) + '","cond": "sslExitBuy", "tf": "' + timeframe.period + '"}'
                alert(alertstring, alert.freq_once_per_bar)
//@version=5
indicator("Benimki Supertrend MTF Heikin Ashi Part_1", overlay=true)

mode = input.string(title='HTF Method', defval='Auto', options=['Auto', 'User Defined'])
//auto higher time frame
HTFo = timeframe.period == '1' ? '5' : timeframe.period == '3' ? '15' : timeframe.period == '5' ? '15' : timeframe.period == '15' ? '60' : timeframe.period == '30' ? '120' : timeframe.period == '45' ? '120' : timeframe.period == '60' ? '240' : timeframe.period == '120' ? '240' : timeframe.period == '180' ? '240' : timeframe.period == '240' ? 'D' : timeframe.period == 'D' ? 'W' : timeframe.period == 'W' ? '5W' : 'D'

HTFm = input.timeframe('5', title='Time Frame (if HTF Method=User Defined)')
HTF = mode == 'Auto' ? HTFo : HTFm

Mult = input.float(defval=2.0, title='ATR Factor', minval=0.5, maxval=100, step=0.1)
Period = input.int(defval=7, title='ATR Period', minval=1, maxval=100)

// Get only symbol
only_symbol(s) =>
    array.get(str.split(s, ":"), 1)

// current time frame

//Heikin Ashi high, low, close
h = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, high)
l = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, low)
c = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, close)

//HeikinAshi atr
Atr = request.security(ticker.heikinashi(syminfo.tickerid), timeframe.period, ta.atr(Period))


screener_func() =>
    ///SSL 1 and SSL2
    Up = (h + l) / 2 - Mult * Atr
    Dn = (h + l) / 2 + Mult * Atr

    float TUp = na
    float TDown = na
    Trend = 0

    TUp := c[1] > TUp[1] ? math.max(Up, TUp[1]) : Up
    TDown := c[1] < TDown[1] ? math.min(Dn, TDown[1]) : Dn
    Trend := c > TDown[1] ? 1 : c < TUp[1] ? -1 : nz(Trend[1], 1)
    Trailingsl = Trend == 1 ? TUp : TDown
    linecolor = Trend == 1 and nz(Trend[1]) == 1 ? color.lime : Trend == -1 and nz(Trend[1]) == -1 ? color.red : na

    // Higher Time Frame

    ////// HTF high, low, close
    highhtf = request.security(ticker.heikinashi(syminfo.tickerid), HTF, high[1], lookahead=barmerge.lookahead_on)
    lowhtf = request.security(ticker.heikinashi(syminfo.tickerid), HTF, low[1], lookahead=barmerge.lookahead_on)
    closehtf = request.security(ticker.heikinashi(syminfo.tickerid), HTF, close[1], lookahead=barmerge.lookahead_on)

    // ATR for HTF
    HTfatr = request.security(ticker.heikinashi(syminfo.tickerid), HTF, ta.atr(Period)[1], lookahead=barmerge.lookahead_on)

    Uphtf = math.abs(highhtf + lowhtf) / 2 - Mult * HTfatr
    Dnhtf = math.abs(highhtf + lowhtf) / 2 + Mult * HTfatr

    float TUphtf = na
    float TDownhtf = na
    TrendHtf = 0

    TUphtf := closehtf[1] > TUphtf[1] ? math.max(Uphtf, TUphtf[1]) : Uphtf
    TDownhtf := closehtf[1] < TDownhtf[1] ? math.min(Dnhtf, TDownhtf[1]) : Dnhtf
    TrendHtf := closehtf > TDownhtf[1] ? 1 : closehtf < TUphtf[1] ? -1 : nz(TrendHtf[1], 1)

    [math.round_to_mintick(close), Trend, Trend[1], TrendHtf, TrendHtf[1]]

/////////////
// SYMBOLS //
// Part 1

u01 = input.bool(true,  title = '', group = 'Symbols', inline = 's01')
u02 = input.bool(true,  title = '', group = 'Symbols', inline = 's02')
u03 = input.bool(true,  title = '', group = 'Symbols', inline = 's03')
u04 = input.bool(true,  title = '', group = 'Symbols', inline = 's04')
u05 = input.bool(true,  title = '', group = 'Symbols', inline = 's05')
u06 = input.bool(true,  title = '', group = 'Symbols', inline = 's06')
u07 = input.bool(true,  title = '', group = 'Symbols', inline = 's07')
u08 = input.bool(true,  title = '', group = 'Symbols', inline = 's08')
u09 = input.bool(true,  title = '', group = 'Symbols', inline = 's09')
u10 = input.bool(true,  title = '', group = 'Symbols', inline = 's10')
u11 = input.bool(true,  title = '', group = 'Symbols', inline = 's11')
u12 = input.bool(true,  title = '', group = 'Symbols', inline = 's12')
u13 = input.bool(true,  title = '', group = 'Symbols', inline = 's13')
u14 = input.bool(true,  title = '', group = 'Symbols', inline = 's14')
u15 = input.bool(true,  title = '', group = 'Symbols', inline = 's15')
u16 = input.bool(true,  title = '', group = 'Symbols', inline = 's16')
u17 = input.bool(true,  title = '', group = 'Symbols', inline = 's17')
u18 = input.bool(true,  title = '', group = 'Symbols', inline = 's18')
u19 = input.bool(true,  title = '', group = 'Symbols', inline = 's19')
u20 = input.bool(true,  title = '', group = 'Symbols', inline = 's20')
// SYMBOLS //
// Part 1

s01 = input.symbol('VGXUSDT', group = 'Symbols', inline = 's01')
s02 = input.symbol('YFIIUSDT', group = 'Symbols', inline = 's02')
s03 = input.symbol('LUNCBUSD', group = 'Symbols', inline = 's03')
s04 = input.symbol('FIROBUSD', group = 'Symbols', inline = 's04')
s05 = input.symbol('BURGERBUSD', group = 'Symbols', inline = 's05')
s06 = input.symbol('FLOWBUSD', group = 'Symbols', inline = 's06')
s07 = input.symbol('LAZIOBUSD', group = 'Symbols', inline = 's07')
s08 = input.symbol('RAYBUSD', group = 'Symbols', inline = 's08')
s09 = input.symbol('C98BUSD', group = 'Symbols', inline = 's09')
s10 = input.symbol('TRXBUSD', group = 'Symbols', inline = 's10')
s11 = input.symbol('TRIBEBUSD', group = 'Symbols', inline = 's11')
s12 = input.symbol('CHRBUSD', group = 'Symbols', inline = 's12')
s13 = input.symbol('RIFUSDT', group = 'Symbols', inline = 's13')
s14 = input.symbol('BALBUSD', group = 'Symbols', inline = 's14')
s15 = input.symbol('NMRBUSD', group = 'Symbols', inline = 's15')
s16 = input.symbol('REEFBUSD', group = 'Symbols', inline = 's16')
s17 = input.symbol('TKOBUSD', group = 'Symbols', inline = 's17')
s18 = input.symbol('JSTBUSD', group = 'Symbols', inline = 's18')
s19 = input.symbol('EGLDBUSD', group = 'Symbols', inline = 's19')
s20 = input.symbol('SOLBUSD', group = 'Symbols', inline = 's20')
// Security calls 
//Part 1

[current_price01, trend01, trend_minus_one01, trendhtf01, trendhtf_minus_one01] = request.security(s01, timeframe.period, screener_func())
[current_price02, trend02, trend_minus_one02, trendhtf02, trendhtf_minus_one02] = request.security(s02, timeframe.period, screener_func())
[current_price03, trend03, trend_minus_one03, trendhtf03, trendhtf_minus_one03] = request.security(s03, timeframe.period, screener_func())
[current_price04, trend04, trend_minus_one04, trendhtf04, trendhtf_minus_one04] = request.security(s04, timeframe.period, screener_func())
[current_price05, trend05, trend_minus_one05, trendhtf05, trendhtf_minus_one05] = request.security(s05, timeframe.period, screener_func())
[current_price06, trend06, trend_minus_one06, trendhtf06, trendhtf_minus_one06] = request.security(s06, timeframe.period, screener_func())
[current_price07, trend07, trend_minus_one07, trendhtf07, trendhtf_minus_one07] = request.security(s07, timeframe.period, screener_func())
[current_price08, trend08, trend_minus_one08, trendhtf08, trendhtf_minus_one08] = request.security(s08, timeframe.period, screener_func())
[current_price09, trend09, trend_minus_one09, trendhtf09, trendhtf_minus_one09] = request.security(s09, timeframe.period, screener_func())
[current_price10, trend10, trend_minus_one10, trendhtf10, trendhtf_minus_one10] = request.security(s10, timeframe.period, screener_func())
[current_price11, trend11, trend_minus_one11, trendhtf11, trendhtf_minus_one11] = request.security(s11, timeframe.period, screener_func())
[current_price12, trend12, trend_minus_one12, trendhtf12, trendhtf_minus_one12] = request.security(s12, timeframe.period, screener_func())
[current_price13, trend13, trend_minus_one13, trendhtf13, trendhtf_minus_one13] = request.security(s13, timeframe.period, screener_func())
[current_price14, trend14, trend_minus_one14, trendhtf14, trendhtf_minus_one14] = request.security(s14, timeframe.period, screener_func())
[current_price15, trend15, trend_minus_one15, trendhtf15, trendhtf_minus_one15] = request.security(s15, timeframe.period, screener_func())
[current_price16, trend16, trend_minus_one16, trendhtf16, trendhtf_minus_one16] = request.security(s16, timeframe.period, screener_func())
[current_price17, trend17, trend_minus_one17, trendhtf17, trendhtf_minus_one17] = request.security(s17, timeframe.period, screener_func())
[current_price18, trend18, trend_minus_one18, trendhtf18, trendhtf_minus_one18] = request.security(s18, timeframe.period, screener_func())
[current_price19, trend19, trend_minus_one19, trendhtf19, trendhtf_minus_one19] = request.security(s19, timeframe.period, screener_func())
[current_price20, trend20, trend_minus_one20, trendhtf20, trendhtf_minus_one20] = request.security(s20, timeframe.period, screener_func())

/////////////
// ARRAYS //

s_arr   = array.new_string(0)
u_arr   = array.new_bool(0)
current_price_arr   = array.new_float(0)
trend_arr = array.new_int(0) 
trend_minus_one_arr = array.new_int(0) 
trendhtf_arr = array.new_int(0) 
trendhtf_minus_one_arr = array.new_int(0) 
// Add Symbols 
array.push(s_arr, only_symbol(s01))
array.push(s_arr, only_symbol(s02))
array.push(s_arr, only_symbol(s03))
array.push(s_arr, only_symbol(s04))
array.push(s_arr, only_symbol(s05))
array.push(s_arr, only_symbol(s06))
array.push(s_arr, only_symbol(s07))
array.push(s_arr, only_symbol(s08))
array.push(s_arr, only_symbol(s09))
array.push(s_arr, only_symbol(s10))
array.push(s_arr, only_symbol(s11))
array.push(s_arr, only_symbol(s12))
array.push(s_arr, only_symbol(s13))
array.push(s_arr, only_symbol(s14))
array.push(s_arr, only_symbol(s15))
array.push(s_arr, only_symbol(s16))
array.push(s_arr, only_symbol(s17))
array.push(s_arr, only_symbol(s18))
array.push(s_arr, only_symbol(s19))
array.push(s_arr, only_symbol(s20))
// FLAGS 
array.push(u_arr, u01)
array.push(u_arr, u02)
array.push(u_arr, u03)
array.push(u_arr, u04)
array.push(u_arr, u05)
array.push(u_arr, u06)
array.push(u_arr, u07)
array.push(u_arr, u08)
array.push(u_arr, u09)
array.push(u_arr, u10)
array.push(u_arr, u11)
array.push(u_arr, u12)
array.push(u_arr, u13)
array.push(u_arr, u14)
array.push(u_arr, u15)
array.push(u_arr, u16)
array.push(u_arr, u17)
array.push(u_arr, u18)
array.push(u_arr, u19)
array.push(u_arr, u20)
// Current price 
array.push(current_price_arr, current_price01)
array.push(current_price_arr, current_price02)
array.push(current_price_arr, current_price03)
array.push(current_price_arr, current_price04)
array.push(current_price_arr, current_price05)
array.push(current_price_arr, current_price06)
array.push(current_price_arr, current_price07)
array.push(current_price_arr, current_price08)
array.push(current_price_arr, current_price09)
array.push(current_price_arr, current_price10)
array.push(current_price_arr, current_price11)
array.push(current_price_arr, current_price12)
array.push(current_price_arr, current_price13)
array.push(current_price_arr, current_price14)
array.push(current_price_arr, current_price15)
array.push(current_price_arr, current_price16)
array.push(current_price_arr, current_price17)
array.push(current_price_arr, current_price18)
array.push(current_price_arr, current_price19)
array.push(current_price_arr, current_price20)
// Super trend 
array.push(trend_arr, trend01)
array.push(trend_arr, trend02)
array.push(trend_arr, trend03)
array.push(trend_arr, trend04)
array.push(trend_arr, trend05)
array.push(trend_arr, trend06)
array.push(trend_arr, trend07)
array.push(trend_arr, trend08)
array.push(trend_arr, trend09)
array.push(trend_arr, trend10)
array.push(trend_arr, trend11)
array.push(trend_arr, trend12)
array.push(trend_arr, trend13)
array.push(trend_arr, trend14)
array.push(trend_arr, trend15)
array.push(trend_arr, trend16)
array.push(trend_arr, trend17)
array.push(trend_arr, trend18)
array.push(trend_arr, trend19)
array.push(trend_arr, trend20)
// Super trend minus one 
array.push(trend_minus_one_arr, trend_minus_one01)
array.push(trend_minus_one_arr, trend_minus_one02)
array.push(trend_minus_one_arr, trend_minus_one03)
array.push(trend_minus_one_arr, trend_minus_one04)
array.push(trend_minus_one_arr, trend_minus_one05)
array.push(trend_minus_one_arr, trend_minus_one06)
array.push(trend_minus_one_arr, trend_minus_one07)
array.push(trend_minus_one_arr, trend_minus_one08)
array.push(trend_minus_one_arr, trend_minus_one09)
array.push(trend_minus_one_arr, trend_minus_one10)
array.push(trend_minus_one_arr, trend_minus_one11)
array.push(trend_minus_one_arr, trend_minus_one12)
array.push(trend_minus_one_arr, trend_minus_one13)
array.push(trend_minus_one_arr, trend_minus_one14)
array.push(trend_minus_one_arr, trend_minus_one15)
array.push(trend_minus_one_arr, trend_minus_one16)
array.push(trend_minus_one_arr, trend_minus_one17)
array.push(trend_minus_one_arr, trend_minus_one18)
array.push(trend_minus_one_arr, trend_minus_one19)
array.push(trend_minus_one_arr, trend_minus_one20)
// trendhtf 
array.push(trendhtf_arr, trendhtf01)
array.push(trendhtf_arr, trendhtf02)
array.push(trendhtf_arr, trendhtf03)
array.push(trendhtf_arr, trendhtf04)
array.push(trendhtf_arr, trendhtf05)
array.push(trendhtf_arr, trendhtf06)
array.push(trendhtf_arr, trendhtf07)
array.push(trendhtf_arr, trendhtf08)
array.push(trendhtf_arr, trendhtf09)
array.push(trendhtf_arr, trendhtf10)
array.push(trendhtf_arr, trendhtf11)
array.push(trendhtf_arr, trendhtf12)
array.push(trendhtf_arr, trendhtf13)
array.push(trendhtf_arr, trendhtf14)
array.push(trendhtf_arr, trendhtf15)
array.push(trendhtf_arr, trendhtf16)
array.push(trendhtf_arr, trendhtf17)
array.push(trendhtf_arr, trendhtf18)
array.push(trendhtf_arr, trendhtf19)
array.push(trendhtf_arr, trendhtf20)
// trendhtf minus one 
array.push(trendhtf_minus_one_arr, trendhtf_minus_one01)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one02)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one03)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one04)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one05)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one06)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one07)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one08)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one09)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one10)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one11)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one12)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one13)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one14)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one15)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one16)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one17)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one18)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one19)
array.push(trendhtf_minus_one_arr, trendhtf_minus_one20)
if barstate.islast
    for i = 0 to array.size(u_arr) - 1
        if array.get(u_arr, i)
            if array.get(trend_arr, i) == 1 and array.get(trend_minus_one_arr, i) == -1
                alertstring = '{"symbol": "' + array.get(s_arr, i) + '","side": "BUY", "cond": "super_trend", "tf": "' + timeframe.period + '", "tv_price": "' + str.tostring(array.get(current_price_arr, i)) + '"}'
                alert(alertstring, alert.freq_once_per_bar)

            if array.get(trend_arr, i) == -1 and array.get(trend_minus_one_arr, i) == 1
                alertstring = '{"symbol": "' + array.get(s_arr, i) + '","side": "SELL", "cond": "super_trend", "tf": "' + timeframe.period + '", "tv_price": "' + str.tostring(array.get(current_price_arr, i)) + '"}'
                alert(alertstring, alert.freq_once_per_bar)

            if array.get(trendhtf_arr, i) == 1 and array.get(trendhtf_minus_one_arr, i) == -1
                alertstring = '{"symbol": "' + array.get(s_arr, i) + '","side": "BUY", "cond": "trend_htf", "tf": "' + timeframe.period + '", "tv_price": "' + str.tostring(array.get(current_price_arr, i)) + '"}'
                alert(alertstring, alert.freq_once_per_bar)

            if array.get(trendhtf_arr, i) == -1 and array.get(trendhtf_minus_one_arr, i) == 1
                alertstring = '{"symbol": "' + array.get(s_arr, i) + '","side": "SELL", "cond": "trend_htf", "tf": "' + timeframe.period + '", "tv_price": "' + str.tostring(array.get(current_price_arr, i)) + '"}'
                alert(alertstring, alert.freq_once_per_bar)